"""
Django settings for locallibrary project.

Generated by 'django-admin startproject' using Django 3.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
import dj_database_url
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-d_sxyxlmtm!at48j@-oai7$!k#8)rlkctf_hd=$s0znt(55bc3"
# SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-&psk#na5l=p3q8_a+-$4w1f^lt3lx1c@d*p4x$ymm_rn7pwb87')
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'AG7cD2B4NVUcdBqXPtxKrzUBqnryGJL51V6qC3z3IwY')
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'

# ALLOWED_HOSTS = ['web-production-e64a.up.railway.app', '127.0.0.1', "3.17.39.21"]
ALLOWED_HOSTS = ['*']

CSRF_TRUSTED_ORIGINS = ['https://web-production-1fe35.up.railway.app']

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "whitenoise.runserver_nostatic",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "catalog.apps.CatalogConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "locallibrary.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        # "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "locallibrary.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# connect to postgresql database on RDS
cloud_database = os.environ.get("CLOUD_DATABASE", "False") == "true"
if cloud_database:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'local_library_db',
            'USER': 'library_user',
            # 'USER': 'librarysuperuser',
            'PASSWORD': 'super123456',
            # 'HOST': 'ADD THE RDS ENDPOINT HERE',
            'HOST': 'database-2.cx24eyeq691w.us-east-2.rds.amazonaws.com',
            'PORT': '5432',
        }
    }

# Set-up postgresql configuration for a localhost server
# Update database configuration from $DATABASE_URL environment variable (if defined)
local_database = os.environ.get("LOCAL_DATABASE", "False") == "true"
if local_database:
    pass
    # DATABASES = {
    #     "default": {
    #         # "ENGINE": "django.db.backends.postgresql_psycopg2",
    #         "ENGINE": "django.db.backends.postgresql",
    #         # "NAME": "local_library_db",
    #         "NAME": "postgres",
    #         # "USER": "library_user",
    #         "USER": "postgres",
    #         # "PASSWORD": 'um?xo[X3_|n"FppwR{@v7u/t)',
    #         # "PASSWORD": 'super123456',
    #         "PASSWORD": '3bG253DA5fAbDCEFFg34G1A5G51D-5ad',
    #         # "HOST": "postgres_lib",
    #         "HOST": "monorail.proxy.rlwy.net",
    #         "PORT": "5432",
    #         # "PORT": "20258",
    #     }
    # }

# Using the default SQLite database
if not local_database and not cloud_database:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

DATABASE_URL = "postgresql://postgres:KRhpUqQfiUiaQrvtIEpMtDtZMbMJDCHM@roundhouse.proxy.rlwy.net:41045/railway"

DATABASES = {"default": dj_database_url.config(default=DATABASE_URL,conn_max_age=1000),}

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

# TIME_ZONE = 'UTC'
TIME_ZONE = "Canada/Pacific"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
if not os.path.isdir(STATIC_ROOT):
    os.makedirs(STATIC_ROOT, mode=0o755)
STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Redirect to home URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = "/"

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

AWS_ACCESS_KEY_ID = 'SET A VALUE HERE'
AWS_SECRET_ACCESS_KEY = 'SET A VALUE HERE'
AWS_STORAGE_BUCKET_NAME = 'iibrarybooks'
AWS_S3_SIGNATURE_NAME = 's3v4',
AWS_S3_REGION_NAME = 'us-east-2'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_VERITY = True
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'